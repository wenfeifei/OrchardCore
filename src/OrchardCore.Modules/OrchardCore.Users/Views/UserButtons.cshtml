@model SummaryAdminUserViewModel
@using OrchardCore.Entities
@using OrchardCore.Users.Models
@inject IAuthorizationService AuthorizationService
@{
    var user = Model.User as User;
    var currentUser = user.UserName == User.Identity.Name;
    var hasManageUser = await AuthorizationService.AuthorizeAsync(User, Permissions.ManageUsers, user);
}
<a asp-action="Edit" asp-route-id="@user.UserId" class="btn btn-primary btn-sm">@T["Edit"]</a>

@if (hasManageUser) 
{
    if (!currentUser)
    {
        <a class="btn btn-danger btn-sm" asp-action="Delete" asp-route-id="@user.UserId" data-url-af="RemoveUrl UnsafeUrl" >@T["Delete"]</a>
    }
    <a asp-action="EditPassword" asp-route-id="@user.UserId" class="btn btn-secondary btn-sm">@T["Edit Password"]</a>
}

@if (!user.EmailConfirmed && Site.As<RegistrationSettings>().UsersMustValidateEmail && hasManageUser)
{
    <form method="post" class="d-inline-block">
        <input name="id" type="hidden" value="@user.UserId" />
        <button asp-action="SendVerificationEmail" asp-controller="Registration" class="btn btn-info btn-sm">@T["Send verification email"]</button>
    </form>
}
