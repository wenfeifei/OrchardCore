@model OrchardCore.ContentFields.ViewModels.MonacoSettingsViewModel
@inject OrchardCore.Environment.Shell.ShellSettings shellSettings;
@{
    var urlPrefix = String.IsNullOrWhiteSpace(shellSettings.RequestUrlPrefix) ? string.Empty : String.Concat(shellSettings.RequestUrlPrefix, '/');
    var IStandaloneEditorConstructionOptionsSchemaPath = $"/{urlPrefix}OrchardCore.Resources/Scripts/monaco/IStandaloneEditorConstructionOptions.json";
}

<div id="@Html.IdFor(m => m)" class="field-editor field-editor-monaco">
    <div class="form-group">
        <label asp-for="Options">@T["Enter the editor options."]</label>
        <div id="@Html.IdFor(m => m)_editor" style="min-height: 200px;" class="form-control"></div>
        <span class="hint"><a href="https://microsoft.github.io/monaco-editor/api/interfaces/monaco.editor.istandaloneeditorconstructionoptions.html" target="_blank">@T["Documentation for options"]</a></span>
        <textarea asp-for="Options" hidden>@Html.Raw(Model.Options)</textarea>
    </div>
</div>
<script asp-name="monaco" depends-on="admin" at="Foot"></script>
<script at="Foot" depends-on="monaco">
$(document).ready(function () {
    require(['vs/editor/editor.main'], function () {

        var html = document.getElementsByTagName("html")[0];
        const mutationObserver = new MutationObserver(setTheme);
        mutationObserver.observe(html, { attributes: true });

        function setTheme() {
            var theme = html.dataset.theme;
            if (theme === "darkmode") {
                monaco.editor.setTheme('vs-dark')
            } else {
                monaco.editor.setTheme('vs')
            }
        }

        setTheme();

        // configure the JSON language support with schemas and schema associations
        monaco.languages.json.jsonDefaults.setDiagnosticsOptions({
            validate: true,
            enableSchemaRequest: true,
            allowComments: true,
            schemas: [{
                uri: "@IStandaloneEditorConstructionOptionsSchemaPath",
                fileMatch: ['*']
            }]
        });

        var editor = monaco.editor.create(document.getElementById('@Html.IdFor(m => m)_editor'), {
            automaticLayout: true,
            language: "json",
            lineNumbers: false,
            minimap: { enabled: false }
        });

        var textArea = document.getElementById('@Html.IdFor(m => m.Options)');
        editor.getModel().setValue(textArea.value);
        window.addEventListener("submit", function () {
            textArea.value = editor.getValue();
        });
    });
});
</script>
