@model OrchardCore.ContentManagement.Display.ViewModels.ContentItemViewModel
@using System.Globalization
@inject IContentManager ContentManager
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor;

@{
    var httpContext = HttpContextAccessor.HttpContext;
    var dashboardFeature = httpContext.Features.Get<DashboardFeature>();

}

@if (dashboardFeature != null && dashboardFeature.IsManageRequest)
{
    ContentItem contentItem = Model.ContentItem;
    var modifiedUtc = contentItem.ModifiedUtc?.ToString("yyyy-MM-ddTHH:mm:sszzz", CultureInfo.InvariantCulture);
        var hasPublished = await ContentManager.HasPublishedVersionAsync(contentItem);
    var hasDraft = contentItem.HasDraft();

    if (contentItem.ModifiedUtc.HasValue)
    {
        <span class="badge ta-badge font-weight-normal" data-toggle="tooltip" title="@await DisplayAsync(await New.DateTime(Utc: contentItem.ModifiedUtc, Format: "g"))">
            <i class="fa fa-calendar text-secondary"></i> <time datetime="@modifiedUtc">@await DisplayAsync(await New.Timespan(Utc: contentItem.ModifiedUtc))</time>
        </span>
    }

    if (!String.IsNullOrEmpty(contentItem.Author))
    {
        <span class="badge ta-badge font-weight-normal" data-toggle="tooltip" title="@T["Author"]">
            <i class="fa fa-user text-secondary mr-1"></i>@contentItem.Author
        </span>
    }
}
